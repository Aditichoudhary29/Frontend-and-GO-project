{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator.LAPTOP-161JJKR7\\\\Desktop\\\\Assignment\\\\client\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Dashboard } from \"./pages/Dashboardpage/Dashboard.page\";\nimport { Login } from './pages/Loginpage/Login.page';\nimport { Signup } from './pages/SignupPage/Signup.page';\nimport { Terms } from './pages/Termsandcon/Terms.page';\nimport { Verify } from './pages/VerifyPage/Verify.page';\nimport { FirstPage } from './pages/MainPage/First.page';\nimport { ProductDetails } from \"./pages/ProductDetails/ProductDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const handleOpenModal = productId => {\n    console.log('Opening modal for product:', productId);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(FirstPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Dashboard\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {\n          onOpenModal: handleOpenModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/terms\",\n        element: /*#__PURE__*/_jsxDEV(Terms, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/verify\",\n        element: /*#__PURE__*/_jsxDEV(Verify, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/productdetails/:productid\",\n        element: ({\n          match\n        }) => /*#__PURE__*/_jsxDEV(ProductDetails, {\n          open: true // Example value for open state, adjust as per your logic\n          ,\n          onClose: () => {} // Example function, adjust as per your logic\n          ,\n          productId: (match === null || match === void 0 ? void 0 : match.params.productid) || '' // Extract productId from URL params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","Dashboard","Login","Signup","Terms","Verify","FirstPage","ProductDetails","jsxDEV","_jsxDEV","App","handleOpenModal","productId","console","log","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onOpenModal","match","open","onClose","params","productid","_c","$RefreshReg$"],"sources":["C:/Users/Administrator.LAPTOP-161JJKR7/Desktop/Assignment/client/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport {BrowserRouter,Routes,Route} from \"react-router-dom\"\nimport { Dashboard} from \"./pages/Dashboardpage/Dashboard.page\";\nimport { Login } from './pages/Loginpage/Login.page';\nimport { Signup } from './pages/SignupPage/Signup.page';\nimport {Terms} from './pages/Termsandcon/Terms.page'\nimport { Verify } from './pages/VerifyPage/Verify.page';\nimport { FirstPage } from './pages/MainPage/First.page';\nimport {ProductDetails} from \"./pages/ProductDetails/ProductDetails\"\n\n\n  const App: React.FC = () => {\n\n    const handleOpenModal = (productId: string) => {\n      \n      console.log('Opening modal for product:', productId);\n    };\n    return <BrowserRouter>\n     <Routes>\n      <Route path='/'element={<FirstPage/>}></Route>\n      <Route path='/Dashboard' element={<Dashboard onOpenModal={handleOpenModal}/>}></Route>\n      <Route path='/signup' element ={<Signup/>}></Route>\n       <Route path='/signin' element={< Login/>}></Route>\n       <Route path='/terms' element={< Terms/>}></Route>\n       <Route path='/verify' element={< Verify/>}></Route>\n       <Route\n          path='/productdetails/:productid'\n          element={({ match }: RouteProps<RouteParams>) => (\n            <ProductDetails\n              open={true} // Example value for open state, adjust as per your logic\n              onClose={() => {}} // Example function, adjust as per your logic\n              productId={match?.params.productid || ''} // Extract productId from URL params\n            />\n          )}\n        />\n\n\n     </Routes>\n    </BrowserRouter>\n  };\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}