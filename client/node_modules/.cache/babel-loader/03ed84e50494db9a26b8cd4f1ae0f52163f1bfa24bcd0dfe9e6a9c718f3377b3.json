{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator.LAPTOP-161JJKR7\\\\Desktop\\\\Assignment\\\\client\\\\src\\\\pages\\\\VerifyPage\\\\Verify.page.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from \"react\";\n// import { Typography } from \"@mui/material\";\n// import { FullScreenContainer, StyledButton } from \"../common/loginsignupstyles\";\n// import {\n//   StyledTypography,\n//   StyledPaper,\n//   StyledForm,\n//   StyledBottom,\n//   OuterInput,\n//   InnerInput,\n//   StyledBottomText,\n//   StyledLink,\n//   InnerTextBox,\n//   StyledPhoneDiv,\n//   StyledPhone,\n//   StyledSvg,\n//   StyledResendButton,\n//   BlueColor,\n//   GreyText\n// } from \"./verifypage.styles\";\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import axios from \"axios\";\n// import image from \"../../assets/SVG/plan-for-intense-storms.svg\";\n\n// interface LocationState {\n//   PhoneNumber?: string;\n// }\n\n// export const Verify: React.FC = () => {\n//   const [otp, setOtp] = useState<string[]>(Array(6).fill(''));\n//   const [timer, setTimer] = useState(30);\n//   const [showResend, setShowResend] = useState(false);\n//   const otpRefs = useRef<(HTMLInputElement | null)[]>([]);\n//   const location = useLocation();\n//   const navigate = useNavigate();\n\n//   const locationState = location.state as LocationState;\n//   const phone = locationState?.PhoneNumber || '';\n\n//   useEffect(() => {\n//     if (otpRefs.current[0]) {\n//       otpRefs.current[0]?.focus();\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     if (timer > 0) {\n//       const countdown = setTimeout(() => setTimer(timer - 1), 1000);\n//       return () => clearTimeout(countdown);\n//     } else {\n//       setShowResend(true);\n//     }\n//   }, [timer]);\n\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>, index: number) => {\n//     const value = e.target.value;\n//     if (/^\\d*$/.test(value) && value.length <= 1) {\n//       const newOtp = [...otp];\n//       newOtp[index] = value;\n//       setOtp(newOtp);\n\n//       // Focus the next input if a value is entered\n//       if (value && index < otpRefs.current.length - 1 && otpRefs.current[index + 1]) {\n//         otpRefs.current[index + 1]?.focus();\n//       }\n//     }\n//   };\n\n//   const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>, index: number) => {\n//     if (e.key === 'Backspace' && !otp[index] && index > 0) {\n//       otpRefs.current[index - 1]?.focus();\n//     } else if (e.key === 'ArrowLeft' && index > 0) {\n//       otpRefs.current[index - 1]?.focus();\n//     } else if (e.key === 'ArrowRight' && index < otpRefs.current.length - 1) {\n//       otpRefs.current[index + 1]?.focus();\n//     }\n//   };\n\n//   const handleSubmit = async () => {\n//     const otpString = otp.join('');\n//     try {\n//       const response = await axios.post('http://localhost:8000/api/v1/users/verify-otp', {\n//         otp: otpString,\n//         PhoneNumber: phone\n//       }, { withCredentials: true });\n//       if (response.status === 200) {\n//         navigate('/');\n//       } else {\n//         alert(response.data.message || \"OTP verification failed\");\n//       }\n//     } catch (error) {\n//       console.error(\"There was an error!\", error);\n//       alert(\"An error occurred while verifying OTP. Please try again.\");\n//     }\n//   };\n\n//   const handleResend = async () => {\n//     try {\n//       // Logic to resend the OTP\n//       await axios.post('http://localhost:8000/api/v1/users/resend-otp', { PhoneNumber: phone });\n//       setTimer(30); // Reset the timer\n//       setShowResend(false); // Hide resend link\n//     } catch (error) {\n//       console.error(\"Error resending OTP:\", error);\n//       alert(\"An error occurred while resending OTP. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <FullScreenContainer>\n//       <StyledPaper>\n//         <StyledForm>\n//           <StyledTypography>\n//             Verify your Phone Number\n//           </StyledTypography>\n//           <StyledBottom>\n//             Enter the OTP sent to \n//           </StyledBottom>\n//           <StyledPhoneDiv>\n//             <StyledPhone>\n//               {phone}\n//             </StyledPhone>\n//             <StyledSvg src={image} onClick={() => navigate('/signin')} />\n//           </StyledPhoneDiv>\n//           <OuterInput>\n//             <InnerInput>\n//               {otp.map((data, index) => (\n//                 <InnerTextBox\n//                   key={index}\n//                   type=\"text\"\n//                   maxLength={1}\n//                   value={data}\n//                   onChange={(e) => handleChange(e as React.ChangeEvent<HTMLInputElement>, index)}\n//                   onKeyDown={(e) => handleKeyDown(e, index)}\n//                   ref={(el) => (otpRefs.current[index] = el)}\n//                 />\n//               ))}\n//             </InnerInput>\n//           </OuterInput>\n//           <StyledBottomText>\n//             {showResend ? (\n//               <>\n//                 <GreyText>\n//                   Didn't receive the code?\n//                 </GreyText>\n//                 <BlueColor>\n//                   <StyledResendButton onClick={handleResend}>Resend</StyledResendButton>\n//                 </BlueColor>\n//               </>\n//             ) : (\n//               <>\n//                 <GreyText>\n//                   Expect OTP in \n//                 </GreyText>\n//                 <BlueColor>\n//                   {timer} seconds\n//                 </BlueColor>\n//               </>\n//             )}\n//           </StyledBottomText>\n//           <StyledButton onClick={handleSubmit}>\n//             Continue\n//           </StyledButton>\n//         </StyledForm>\n//       </StyledPaper>\n//     </FullScreenContainer>\n//   );\n// };\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { TextField } from \"@mui/material\";\nimport { FullScreenContainer, StyledButton } from \"../common/loginsignupstyles\";\nimport { StyledTypography, StyledPaper, StyledForm, StyledBottom, OuterInput, InnerInput, StyledBottomText, StyledPhoneDiv, StyledPhone, StyledSvg, StyledResendButton, BlueColor, GreyText, ErrorMessage } from \"./verifypage.styles\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nimport image from \"../../assets/SVG/plan-for-intense-storms.svg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Verify = () => {\n  _s();\n  const [otp, setOtp] = useState(Array(6).fill(''));\n  const [timer, setTimer] = useState(30);\n  const [showResend, setShowResend] = useState(false);\n  const [error, setError] = useState(false); // Add error state\n  const otpRefs = useRef([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const locationState = location.state;\n  const phone = (locationState === null || locationState === void 0 ? void 0 : locationState.PhoneNumber) || '';\n  useEffect(() => {\n    if (otpRefs.current[0]) {\n      var _otpRefs$current$;\n      (_otpRefs$current$ = otpRefs.current[0]) === null || _otpRefs$current$ === void 0 ? void 0 : _otpRefs$current$.focus();\n    }\n  }, []);\n  useEffect(() => {\n    if (timer > 0) {\n      const countdown = setTimeout(() => setTimer(timer - 1), 1000);\n      return () => clearTimeout(countdown);\n    } else {\n      setShowResend(true);\n    }\n  }, [timer]);\n  const handleChange = (e, index) => {\n    const value = e.target.value;\n    if (/^\\d*$/.test(value) && value.length <= 1) {\n      const newOtp = [...otp];\n      newOtp[index] = value;\n      setOtp(newOtp);\n\n      // Focus the next input if a value is entered\n      if (value && index < otpRefs.current.length - 1 && otpRefs.current[index + 1]) {\n        var _otpRefs$current;\n        (_otpRefs$current = otpRefs.current[index + 1]) === null || _otpRefs$current === void 0 ? void 0 : _otpRefs$current.focus();\n      }\n    }\n  };\n  const handleKeyDown = (e, index) => {\n    if (e.key === 'Backspace' && !otp[index] && index > 0) {\n      var _otpRefs$current2;\n      (_otpRefs$current2 = otpRefs.current[index - 1]) === null || _otpRefs$current2 === void 0 ? void 0 : _otpRefs$current2.focus();\n    } else if (e.key === 'ArrowLeft' && index > 0) {\n      var _otpRefs$current3;\n      (_otpRefs$current3 = otpRefs.current[index - 1]) === null || _otpRefs$current3 === void 0 ? void 0 : _otpRefs$current3.focus();\n    } else if (e.key === 'ArrowRight' && index < otpRefs.current.length - 1) {\n      var _otpRefs$current4;\n      (_otpRefs$current4 = otpRefs.current[index + 1]) === null || _otpRefs$current4 === void 0 ? void 0 : _otpRefs$current4.focus();\n    }\n  };\n  const handleSubmit = async () => {\n    const otpString = otp.join('');\n    try {\n      const response = await axios.post('http://localhost:8000/api/v1/users/verify-otp', {\n        otp: otpString,\n        PhoneNumber: phone\n      }, {\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        navigate('/');\n      } else {\n        setError(true); // Set error state if verification fails\n      }\n    } catch (error) {\n      console.error(\"There was an error!\", error);\n      setError(true); // Set error state if there's an error\n    }\n  };\n  const handleResend = async () => {\n    try {\n      // Logic to resend the OTP\n      await axios.post('http://localhost:8000/api/v1/users/resend-otp', {\n        PhoneNumber: phone\n      });\n      setTimer(30); // Reset the timer\n      setShowResend(false); // Hide resend link\n    } catch (error) {\n      console.error(\"Error resending OTP:\", error);\n      alert(\"An error occurred while resending OTP. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FullScreenContainer, {\n    children: /*#__PURE__*/_jsxDEV(StyledPaper, {\n      children: /*#__PURE__*/_jsxDEV(StyledForm, {\n        children: [/*#__PURE__*/_jsxDEV(StyledTypography, {\n          children: \"Verify your Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledBottom, {\n          children: \"Enter the OTP sent to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledPhoneDiv, {\n          children: [/*#__PURE__*/_jsxDEV(StyledPhone, {\n            children: phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledSvg, {\n            src: image,\n            onClick: () => navigate('/signin')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OuterInput, {\n          children: /*#__PURE__*/_jsxDEV(InnerInput, {\n            children: otp.map((data, index) => /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"text\",\n              value: data,\n              onChange: e => handleChange(e, index),\n              onKeyDown: e => handleKeyDown(e, index),\n              inputProps: {\n                maxLength: 1\n              } // Use inputProps to set maxLength\n              ,\n              inputRef: el => otpRefs.current[index] = el // Use inputRef to set the ref\n              ,\n              error: error // Apply error styling\n              ,\n              helperText: error ? \"Incorrect OTP\" : \"\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: \"OTP verification failed. Please try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledBottomText, {\n          children: showResend ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(GreyText, {\n              children: \"Didn't receive the code?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BlueColor, {\n              children: /*#__PURE__*/_jsxDEV(StyledResendButton, {\n                onClick: handleResend,\n                children: \"Resend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(GreyText, {\n              children: \"Expect OTP in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BlueColor, {\n              children: [timer, \" seconds\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          onClick: handleSubmit,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n};\n_s(Verify, \"1c4XNdIsmzNiW/LBNMdXa4Vb46A=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Verify;\nvar _c;\n$RefreshReg$(_c, \"Verify\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TextField","FullScreenContainer","StyledButton","StyledTypography","StyledPaper","StyledForm","StyledBottom","OuterInput","InnerInput","StyledBottomText","StyledPhoneDiv","StyledPhone","StyledSvg","StyledResendButton","BlueColor","GreyText","ErrorMessage","useLocation","useNavigate","axios","image","jsxDEV","_jsxDEV","Fragment","_Fragment","Verify","_s","otp","setOtp","Array","fill","timer","setTimer","showResend","setShowResend","error","setError","otpRefs","location","navigate","locationState","state","phone","PhoneNumber","current","_otpRefs$current$","focus","countdown","setTimeout","clearTimeout","handleChange","e","index","value","target","test","length","newOtp","_otpRefs$current","handleKeyDown","key","_otpRefs$current2","_otpRefs$current3","_otpRefs$current4","handleSubmit","otpString","join","response","post","withCredentials","status","console","handleResend","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","src","onClick","map","data","type","onChange","onKeyDown","inputProps","maxLength","inputRef","el","helperText","_c","$RefreshReg$"],"sources":["C:/Users/Administrator.LAPTOP-161JJKR7/Desktop/Assignment/client/src/pages/VerifyPage/Verify.page.tsx"],"sourcesContent":["// import React, { useState, useRef, useEffect } from \"react\";\r\n// import { Typography } from \"@mui/material\";\r\n// import { FullScreenContainer, StyledButton } from \"../common/loginsignupstyles\";\r\n// import {\r\n//   StyledTypography,\r\n//   StyledPaper,\r\n//   StyledForm,\r\n//   StyledBottom,\r\n//   OuterInput,\r\n//   InnerInput,\r\n//   StyledBottomText,\r\n//   StyledLink,\r\n//   InnerTextBox,\r\n//   StyledPhoneDiv,\r\n//   StyledPhone,\r\n//   StyledSvg,\r\n//   StyledResendButton,\r\n//   BlueColor,\r\n//   GreyText\r\n// } from \"./verifypage.styles\";\r\n// import { useLocation, useNavigate } from 'react-router-dom';\r\n// import axios from \"axios\";\r\n// import image from \"../../assets/SVG/plan-for-intense-storms.svg\";\r\n\r\n// interface LocationState {\r\n//   PhoneNumber?: string;\r\n// }\r\n\r\n// export const Verify: React.FC = () => {\r\n//   const [otp, setOtp] = useState<string[]>(Array(6).fill(''));\r\n//   const [timer, setTimer] = useState(30);\r\n//   const [showResend, setShowResend] = useState(false);\r\n//   const otpRefs = useRef<(HTMLInputElement | null)[]>([]);\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n\r\n//   const locationState = location.state as LocationState;\r\n//   const phone = locationState?.PhoneNumber || '';\r\n\r\n//   useEffect(() => {\r\n//     if (otpRefs.current[0]) {\r\n//       otpRefs.current[0]?.focus();\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (timer > 0) {\r\n//       const countdown = setTimeout(() => setTimer(timer - 1), 1000);\r\n//       return () => clearTimeout(countdown);\r\n//     } else {\r\n//       setShowResend(true);\r\n//     }\r\n//   }, [timer]);\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>, index: number) => {\r\n//     const value = e.target.value;\r\n//     if (/^\\d*$/.test(value) && value.length <= 1) {\r\n//       const newOtp = [...otp];\r\n//       newOtp[index] = value;\r\n//       setOtp(newOtp);\r\n\r\n//       // Focus the next input if a value is entered\r\n//       if (value && index < otpRefs.current.length - 1 && otpRefs.current[index + 1]) {\r\n//         otpRefs.current[index + 1]?.focus();\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>, index: number) => {\r\n//     if (e.key === 'Backspace' && !otp[index] && index > 0) {\r\n//       otpRefs.current[index - 1]?.focus();\r\n//     } else if (e.key === 'ArrowLeft' && index > 0) {\r\n//       otpRefs.current[index - 1]?.focus();\r\n//     } else if (e.key === 'ArrowRight' && index < otpRefs.current.length - 1) {\r\n//       otpRefs.current[index + 1]?.focus();\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async () => {\r\n//     const otpString = otp.join('');\r\n//     try {\r\n//       const response = await axios.post('http://localhost:8000/api/v1/users/verify-otp', {\r\n//         otp: otpString,\r\n//         PhoneNumber: phone\r\n//       }, { withCredentials: true });\r\n//       if (response.status === 200) {\r\n//         navigate('/');\r\n//       } else {\r\n//         alert(response.data.message || \"OTP verification failed\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"There was an error!\", error);\r\n//       alert(\"An error occurred while verifying OTP. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleResend = async () => {\r\n//     try {\r\n//       // Logic to resend the OTP\r\n//       await axios.post('http://localhost:8000/api/v1/users/resend-otp', { PhoneNumber: phone });\r\n//       setTimer(30); // Reset the timer\r\n//       setShowResend(false); // Hide resend link\r\n//     } catch (error) {\r\n//       console.error(\"Error resending OTP:\", error);\r\n//       alert(\"An error occurred while resending OTP. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <FullScreenContainer>\r\n//       <StyledPaper>\r\n//         <StyledForm>\r\n//           <StyledTypography>\r\n//             Verify your Phone Number\r\n//           </StyledTypography>\r\n//           <StyledBottom>\r\n//             Enter the OTP sent to \r\n//           </StyledBottom>\r\n//           <StyledPhoneDiv>\r\n//             <StyledPhone>\r\n//               {phone}\r\n//             </StyledPhone>\r\n//             <StyledSvg src={image} onClick={() => navigate('/signin')} />\r\n//           </StyledPhoneDiv>\r\n//           <OuterInput>\r\n//             <InnerInput>\r\n//               {otp.map((data, index) => (\r\n//                 <InnerTextBox\r\n//                   key={index}\r\n//                   type=\"text\"\r\n//                   maxLength={1}\r\n//                   value={data}\r\n//                   onChange={(e) => handleChange(e as React.ChangeEvent<HTMLInputElement>, index)}\r\n//                   onKeyDown={(e) => handleKeyDown(e, index)}\r\n//                   ref={(el) => (otpRefs.current[index] = el)}\r\n//                 />\r\n//               ))}\r\n//             </InnerInput>\r\n//           </OuterInput>\r\n//           <StyledBottomText>\r\n//             {showResend ? (\r\n//               <>\r\n//                 <GreyText>\r\n//                   Didn't receive the code?\r\n//                 </GreyText>\r\n//                 <BlueColor>\r\n//                   <StyledResendButton onClick={handleResend}>Resend</StyledResendButton>\r\n//                 </BlueColor>\r\n//               </>\r\n//             ) : (\r\n//               <>\r\n//                 <GreyText>\r\n//                   Expect OTP in \r\n//                 </GreyText>\r\n//                 <BlueColor>\r\n//                   {timer} seconds\r\n//                 </BlueColor>\r\n//               </>\r\n//             )}\r\n//           </StyledBottomText>\r\n//           <StyledButton onClick={handleSubmit}>\r\n//             Continue\r\n//           </StyledButton>\r\n//         </StyledForm>\r\n//       </StyledPaper>\r\n//     </FullScreenContainer>\r\n//   );\r\n// };\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { Typography, TextField } from \"@mui/material\";\r\nimport { FullScreenContainer, StyledButton } from \"../common/loginsignupstyles\";\r\nimport {\r\n  StyledTypography,\r\n  StyledPaper,\r\n  StyledForm,\r\n  StyledBottom,\r\n  OuterInput,\r\n  InnerInput,\r\n  StyledBottomText,\r\n  StyledLink,\r\n  InnerTextBox,\r\n  StyledPhoneDiv,\r\n  StyledPhone,\r\n  StyledSvg,\r\n  StyledResendButton,\r\n  BlueColor,\r\n  GreyText,\r\n  ErrorMessage\r\n} from \"./verifypage.styles\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport image from \"../../assets/SVG/plan-for-intense-storms.svg\";\r\n\r\n\r\ninterface LocationState {\r\n  PhoneNumber?: string;\r\n}\r\n\r\nexport const Verify: React.FC = () => {\r\n  const [otp, setOtp] = useState<string[]>(Array(6).fill(''));\r\n  const [timer, setTimer] = useState(30);\r\n  const [showResend, setShowResend] = useState(false);\r\n  const [error, setError] = useState(false); // Add error state\r\n  const otpRefs = useRef<(HTMLInputElement | null)[]>([]);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const locationState = location.state as LocationState;\r\n  const phone = locationState?.PhoneNumber || '';\r\n\r\n  useEffect(() => {\r\n    if (otpRefs.current[0]) {\r\n      otpRefs.current[0]?.focus();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timer > 0) {\r\n      const countdown = setTimeout(() => setTimer(timer - 1), 1000);\r\n      return () => clearTimeout(countdown);\r\n    } else {\r\n      setShowResend(true);\r\n    }\r\n  }, [timer]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>, index: number) => {\r\n    const value = e.target.value;\r\n    if (/^\\d*$/.test(value) && value.length <= 1) {\r\n      const newOtp = [...otp];\r\n      newOtp[index] = value;\r\n      setOtp(newOtp);\r\n\r\n      // Focus the next input if a value is entered\r\n      if (value && index < otpRefs.current.length - 1 && otpRefs.current[index + 1]) {\r\n        otpRefs.current[index + 1]?.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>, index: number) => {\r\n    if (e.key === 'Backspace' && !otp[index] && index > 0) {\r\n      otpRefs.current[index - 1]?.focus();\r\n    } else if (e.key === 'ArrowLeft' && index > 0) {\r\n      otpRefs.current[index - 1]?.focus();\r\n    } else if (e.key === 'ArrowRight' && index < otpRefs.current.length - 1) {\r\n      otpRefs.current[index + 1]?.focus();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const otpString = otp.join('');\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/v1/users/verify-otp', {\r\n        otp: otpString,\r\n        PhoneNumber: phone\r\n      }, { withCredentials: true });\r\n      if (response.status === 200) {\r\n        navigate('/');\r\n      } else {\r\n        setError(true); // Set error state if verification fails\r\n      }\r\n    } catch (error) {\r\n      console.error(\"There was an error!\", error);\r\n      setError(true); // Set error state if there's an error\r\n    }\r\n  };\r\n\r\n  const handleResend = async () => {\r\n    try {\r\n      // Logic to resend the OTP\r\n      await axios.post('http://localhost:8000/api/v1/users/resend-otp', { PhoneNumber: phone });\r\n      setTimer(30); // Reset the timer\r\n      setShowResend(false); // Hide resend link\r\n    } catch (error) {\r\n      console.error(\"Error resending OTP:\", error);\r\n      alert(\"An error occurred while resending OTP. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FullScreenContainer>\r\n      <StyledPaper>\r\n        <StyledForm>\r\n          <StyledTypography>\r\n            Verify your Phone Number\r\n          </StyledTypography>\r\n          <StyledBottom>\r\n            Enter the OTP sent to \r\n          </StyledBottom>\r\n          <StyledPhoneDiv>\r\n            <StyledPhone>\r\n              {phone}\r\n            </StyledPhone>\r\n            <StyledSvg src={image} onClick={() => navigate('/signin')} />\r\n          </StyledPhoneDiv>\r\n          <OuterInput>\r\n            <InnerInput>\r\n              {otp.map((data, index) => (\r\n                <TextField\r\n                  key={index}\r\n                  type=\"text\"\r\n                  value={data}\r\n                  onChange={(e) => handleChange(e as React.ChangeEvent<HTMLInputElement>, index)}\r\n                  onKeyDown={(e) => handleKeyDown(e, index)}\r\n                  inputProps={{ maxLength: 1 }} // Use inputProps to set maxLength\r\n                  inputRef={(el) => (otpRefs.current[index] = el)} // Use inputRef to set the ref\r\n                  error={error} // Apply error styling\r\n                  helperText={error ? \"Incorrect OTP\" : \"\"}\r\n                />\r\n              ))}\r\n            </InnerInput>\r\n          </OuterInput>\r\n          {error && <ErrorMessage>OTP verification failed. Please try again.</ErrorMessage>}\r\n          <StyledBottomText>\r\n            {showResend ? (\r\n              <>\r\n                <GreyText>\r\n                  Didn't receive the code?\r\n                </GreyText>\r\n                <BlueColor>\r\n                  <StyledResendButton onClick={handleResend}>Resend</StyledResendButton>\r\n                </BlueColor>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <GreyText>\r\n                  Expect OTP in \r\n                </GreyText>\r\n                <BlueColor>\r\n                  {timer} seconds\r\n                </BlueColor>\r\n              </>\r\n            )}\r\n          </StyledBottomText>\r\n          <StyledButton onClick={handleSubmit}>\r\n            Continue\r\n          </StyledButton>\r\n        </StyledForm>\r\n      </StyledPaper>\r\n    </FullScreenContainer>\r\n  );\r\n};\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}