{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator.LAPTOP-161JJKR7\\\\Desktop\\\\Assignment\\\\client\\\\src\\\\pages\\\\Dashboardpage\\\\DashboardComponents\\\\Appbar.component.tsx\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppDiv = styled('Appbar')`\n    height: 30px;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    z-index: 9;\n    border-bottom: 1px solid red;\n    padding: 1.5rem 4rem;\n    display: flex;\n    background-color:red;\n    -webkit-box-pack: justify;\n    justify-content: space-between;\n    -webkit-box-align: center;\n    align-items: center;\n}\n`;\n_c = AppDiv;\nconst StyledImage = styled('img')`\n  width: 100%;\n  max-width: 400px; // Adjust the maximum width as needed\n  height: auto;\n  border-radius: 8px; // Optional: Add rounded corners\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); // Optional: Add a shadow effect\n`;\nconst CenterAppbar = styled('div')`\n    display: inline-flex;\n    gap: 2rem;\n    flex: 0 1 auto;\n    -webkit-box-pack: center;\n    justify-content: center;\n    place-self: center;\n    margin: 0px;\n    padding: 0px;\n    list-style: none;\n}\n`;\n_c2 = CenterAppbar;\nexport const AppBar = () => {\n  return /*#__PURE__*/_jsxDEV(AppDiv, {\n    children: /*#__PURE__*/_jsxDEV(CenterAppbar, {\n      children: \"helo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n};\n_c3 = AppBar;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppDiv\");\n$RefreshReg$(_c2, \"CenterAppbar\");\n$RefreshReg$(_c3, \"AppBar\");","map":{"version":3,"names":["styled","jsxDEV","_jsxDEV","AppDiv","_c","StyledImage","CenterAppbar","_c2","AppBar","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/Administrator.LAPTOP-161JJKR7/Desktop/Assignment/client/src/pages/Dashboardpage/DashboardComponents/Appbar.component.tsx"],"sourcesContent":["import styled from \"styled-components\"\r\nconst AppDiv=styled('Appbar')`\r\n    height: 30px;\r\n    position: fixed;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 100%;\r\n    z-index: 9;\r\n    border-bottom: 1px solid red;\r\n    padding: 1.5rem 4rem;\r\n    display: flex;\r\n    background-color:red;\r\n    -webkit-box-pack: justify;\r\n    justify-content: space-between;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n}\r\n`\r\n const StyledImage = styled('img')`\r\n  width: 100%;\r\n  max-width: 400px; // Adjust the maximum width as needed\r\n  height: auto;\r\n  border-radius: 8px; // Optional: Add rounded corners\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); // Optional: Add a shadow effect\r\n`;\r\n const CenterAppbar=styled('div')`\r\n    display: inline-flex;\r\n    gap: 2rem;\r\n    flex: 0 1 auto;\r\n    -webkit-box-pack: center;\r\n    justify-content: center;\r\n    place-self: center;\r\n    margin: 0px;\r\n    padding: 0px;\r\n    list-style: none;\r\n}\r\n`;\r\nexport const AppBar=()=>{\r\n\r\n    return <AppDiv>\r\n      \r\n        <CenterAppbar>\r\n            helo\r\n        </CenterAppbar>\r\n\r\n    </AppDiv>\r\n}"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACtC,MAAMC,MAAM,GAACH,MAAM,CAAC,QAAQ,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAI,EAAA,GAhBKD,MAAM;AAiBX,MAAME,WAAW,GAAGL,MAAM,CAAC,KAAK,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AACA,MAAMM,YAAY,GAACN,MAAM,CAAC,KAAK,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACO,GAAA,GAXKD,YAAY;AAYnB,OAAO,MAAME,MAAM,GAACA,CAAA,KAAI;EAEpB,oBAAON,OAAA,CAACC,MAAM;IAAAM,QAAA,eAEVP,OAAA,CAACI,YAAY;MAAAG,QAAA,EAAC;IAEd;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CAAC;AACb,CAAC;AAAAC,GAAA,GATYN,MAAM;AAAA,IAAAJ,EAAA,EAAAG,GAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}